
function Get-VivantioRPCTicket {
<#
    .SYNOPSIS
        Get a Vivantio ticket

    .DESCRIPTION
        Get a ticket by ID or Query

    .PARAMETER Query
        A query generated by New-VivantioRPCQuery, containing items generated by New-VivantioRPCQueryItem

    .PARAMETER Id
        The database ID of the ticket

    .PARAMETER Raw
        Return the raw data from the request

    .EXAMPLE
        PS C:\> Get-VivantioRPCTicket -Query $value1

    .LINK
        https://webservices-na01.vivantio.com/Help/Api/POST-api-Ticket-Select

    .LINK
        https://webservices-na01.vivantio.com/Help/Api/POST-api-Ticket-SelectById-id

    .LINK
        https://webservices-na01.vivantio.com/Help/Api/POST-api-Ticket-SelectList
#>

    [CmdletBinding(DefaultParameterSetName = 'SelectById')]
    param
    (
        [Parameter(ParameterSetName = 'Select',
                   Mandatory = $true)]
        [ValidateNotNullOrEmpty()]
        [object]$Query,

        [Parameter(ParameterSetName = 'SelectById',
                   Mandatory = $true,
                   ValueFromPipeline = $true,
                   ValueFromPipelineByPropertyName = $true)]
        [uint64[]]$Id,

        [switch]$Raw
    )

    begin {
        $Segments = [System.Collections.ArrayList]::new(@('Ticket'))
    }

    process {
        switch ($PSCmdlet.ParameterSetName) {
            'Select' {
                [void]$Segments.Add($_)

                $uri = BuildNewURI -Segments $Segments

                $paramInvokeVivantioRequest = @{
                    URI    = $uri
                    Body   = $Query
                    Raw    = $Raw
                    Method = 'POST'
                }

                if ($Query -is [System.String]) {
                    $paramInvokeVivantioRequest['BodyIsJSON'] = $true
                }

                InvokeVivantioRequest @paramInvokeVivantioRequest

                break
            }

            'SelectById' {
                $paramInvokeVivantioRequest = @{
                    Raw    = $Raw
                    Method = 'POST'
                }

                if (@($Id).Count -eq 1) {
                    Write-Verbose "Single ID"
                    [void]$Segments.AddRange(@('SelectById', $Id))
                } else {
                    [void]$Segments.Add('SelectList')

                    Write-Verbose "$(@($Value).Count) IDs to select"
                    $paramInvokeVivantioRequest['Body'] = ,@($Id) | ConvertTo-Json -Compress
                    $paramInvokeVivantioRequest['BodyIsJSON'] = $true
                }

                $paramInvokeVivantioRequest['Uri'] = BuildNewURI -Segments $Segments

                InvokeVivantioRequest @paramInvokeVivantioRequest

                break
            }

            default {
                throw "'$_' NOT IMPLEMENTED"
            }
        }
    }

    end {

    }
}
